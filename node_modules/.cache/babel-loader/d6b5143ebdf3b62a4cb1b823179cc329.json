{"ast":null,"code":"var _jsxFileName = \"/Users/pak/Desktop/react-term-3/react-day-2/todo/src/Components/Task.js\";\nimport React, { Component } from 'react';\nimport TaskList from './TaskList';\n\nclass Task extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      taskInput: '',\n      isToggle: false\n    };\n\n    this.taskListHandleToggle = id => {\n      this.setState({\n        isToggle: !this.state.isToggle\n      });\n    };\n\n    this.taskListHandleEdit = event => {\n      this.setState({\n        newInput: event.target.value\n      });\n    };\n\n    this.showTaskList = () => {\n      return this.props.list.map(task => {\n        return React.createElement(\"div\", {\n          key: task.id,\n          style: {\n            marginBottom: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, this.state.isToggle ? React.createElement(\"input\", {\n          value: task.todo,\n          onChange: this.taskListHandleEdit.bind(this),\n          name: \"newInput\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }) : task.todo, React.createElement(\"button\", {\n          onClick: () => this.taskListHandleToggle(task.id),\n          style: {\n            marginLeft: '5px',\n            marginRight: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(\"button\", {\n          onClick: () => this.taskListHandleDeleteByID(task.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"Delete\"));\n      });\n    };\n\n    this.taskHandleDeleteByID = taskID => {\n      this.props.appHandleDeleteByID(taskID);\n    };\n\n    this.taskHandleInput = event => {\n      //console.log(`name: ${event.target.name} || value ${event.target.value}`)\n      //<button onClick={() => this.taskHandleDeleteByID(task.id)}>Delete</button>\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.taskHandleSubmit = event => {\n      event.preventDefault();\n      this.props.appHandleSubmit(this.state.taskInput);\n      this.form.reset();\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.taskHandleSubmit,\n      ref: element => this.form = element,\n      style: {\n        marginBottom: '5px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.taskHandleInput,\n      name: \"taskInput\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Submit\")), this.showTaskList());\n  }\n\n}\n\nexport default Task;","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/Components/Task.js"],"names":["React","Component","TaskList","Task","state","taskInput","isToggle","taskListHandleToggle","id","setState","taskListHandleEdit","event","newInput","target","value","showTaskList","props","list","map","task","marginBottom","todo","bind","marginLeft","marginRight","taskListHandleDeleteByID","taskHandleDeleteByID","taskID","appHandleDeleteByID","taskHandleInput","name","taskHandleSubmit","preventDefault","appHandleSubmit","form","reset","render","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport TaskList from './TaskList';\n\nclass Task extends Component {\n\n    state = {\n        taskInput: '',\n        isToggle: false\n    }\n\n\n    taskListHandleToggle = (id) => {\n\n\n        this.setState({\n            isToggle: !this.state.isToggle\n        })\n      }\n\n      taskListHandleEdit = (event) => {\n  \n        this.setState({\n            newInput: event.target.value\n        })\n    \n      }\n\n\n    showTaskList = () => {\n        return this.props.list.map((task) => {\n            return (\n                <div key={task.id} style={{marginBottom: '10px'}}>\n                {  this.state.isToggle ? <input \n                                value={task.todo} \n                                onChange={this.taskListHandleEdit.bind(this)} \n                                name=\"newInput\"\n                                /> \n                                : task.todo } \n                <button onClick={() => this.taskListHandleToggle(task.id)} style={{marginLeft: '5px', marginRight: '5px'}}>Edit</button>\n                <button onClick={() => this.taskListHandleDeleteByID(task.id)}>Delete</button>\n            </div>\n            )\n          })\n    }\n\n    taskHandleDeleteByID = (taskID) => {\n        this.props.appHandleDeleteByID(taskID);\n    }\n\n    taskHandleInput = (event) => {\n        //console.log(`name: ${event.target.name} || value ${event.target.value}`)\n        //<button onClick={() => this.taskHandleDeleteByID(task.id)}>Delete</button>\n        this.setState({\n          [event.target.name]: event.target.value\n        })\n    }\n\n    taskHandleSubmit = (event) => {\n        event.preventDefault();\n\n        this.props.appHandleSubmit(this.state.taskInput);\n        this.form.reset();\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.taskHandleSubmit} ref={element => this.form = element} style={{marginBottom: '5px'}}>\n                    <input \n                        onChange={this.taskHandleInput} \n                        name=\"taskInput\" \n                    />\n                    <button>Submit</button>\n                </form>\n               \n                {this.showTaskList()} \n            </div>\n        )\n    }\n\n}\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}