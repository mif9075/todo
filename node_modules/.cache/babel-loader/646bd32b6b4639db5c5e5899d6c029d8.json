{"ast":null,"code":"var _jsxFileName = \"/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport Nav from './Components/Nav';\nimport './App.css';\nimport { handleSignUpAndLogInApi, handleGetAllTodoApi, handleJWTExpirationApi, handleSubmitNewTask, handleDeleteApi, handleEditApi } from './utils/api';\nimport Task from './Components/Task';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      isAuth: false,\n      password: '1',\n      message: 'Please sign up to use the best Todo Manager System!',\n      user: null\n    };\n\n    this.handleSubmit = value => {\n      handleSubmitNewTask(value, this.state.list).then(newTodoList => {\n        console.log(newTodoList);\n        this.setState({\n          list: newTodoList\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleDelete = taskID => {\n      handleDeleteApi(taskID).then(newArray => {\n        console.log(newArray);\n        this.setState({\n          list: newArray\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleEditInputUpdate = (id, newTodo) => {\n      console.log('TRIGGERD', id, newTodo);\n      handleEditApi(id, newTodo).then(result => {\n        let updated = [...this.state.list];\n        updated.map(task => task._id === id ? result.todo = newTodo.data.todo : task);\n        this.setState({\n          list: updated\n        });\n      }).catch(error => {\n        console.log(error);\n      }); // axios.put('http://localhost:3001/todo/updatetodobyid',  {\n      //     id: id,\n      //     newTodo: newTodo\n      // })\n      // .then(newTodo => {\n      //   let updated = [...this.state.list];\n      //   updated.map(task => (task._id === id ? task.todo = newTodo.data.todo : task))\n      //   this.setState({\n      //     list: updated\n      //   })\n      // })\n      // .catch(error => {\n      //   console.log(error);\n      // })\n    };\n\n    this.handleAuth = userInfo => {\n      handleSignUpAndLogInApi(userInfo).then(decoded => {\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n          handleGetAllTodoApi().then(result => {\n            this.setState({\n              list: result.data.todos\n            });\n          }).catch(error => {\n            this.setState({\n              message: error.message\n            });\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          message: error.message\n        });\n      });\n    };\n\n    this.logout = () => {\n      //console.log('85 logout');\n      this.setState({\n        user: null,\n        message: 'Please login to use the app',\n        isAuth: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    handleJWTExpirationApi().then(token => {\n      let decoded = jwt_decode(token);\n      this.setState({\n        user: decoded.email,\n        isAuth: true\n      }, () => {\n        handleGetAllTodoApi().then(result => {\n          this.setState({\n            list: result.data.todos\n          });\n        }).catch(error => {\n          this.setState({\n            message: error.message,\n            user: null\n          });\n        });\n      });\n    }).catch(error => {\n      return;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      appAuthFunc: this.handleAuth,\n      user: this.state.user,\n      appLogout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }), this.state.isAuth ? React.createElement(Task, Object.assign({}, this.state, {\n      appHandleSubmit: this.handleSubmit,\n      appHandleDeleteByID: this.handleDelete,\n      appHandleEditInputUpdate: this.handleEditInputUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })) : this.state.message);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js"],"names":["React","Component","axios","jwt_decode","Nav","handleSignUpAndLogInApi","handleGetAllTodoApi","handleJWTExpirationApi","handleSubmitNewTask","handleDeleteApi","handleEditApi","Task","App","state","list","isAuth","password","message","user","handleSubmit","value","then","newTodoList","console","log","setState","catch","error","handleDelete","taskID","newArray","handleEditInputUpdate","id","newTodo","result","updated","map","task","_id","todo","data","handleAuth","userInfo","decoded","email","todos","logout","componentDidMount","token","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Nav from './Components/Nav';\nimport './App.css';\n\nimport {\n  handleSignUpAndLogInApi,\n  handleGetAllTodoApi,\n  handleJWTExpirationApi,\n  handleSubmitNewTask,\n  handleDeleteApi,\n  handleEditApi\n} from './utils/api';\n\nimport Task from './Components/Task';\n\nclass App extends Component {\n\n  state = {\n    list : [],\n    isAuth: false,\n    password: '1',\n    message: 'Please sign up to use the best Todo Manager System!',\n    user: null\n  }\n\n  componentDidMount() {\n\n    handleJWTExpirationApi()\n      .then( token => {\n\n        let decoded = jwt_decode(token);\n\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n\n          handleGetAllTodoApi()\n          .then( result => {\n\n            this.setState({\n              list: result.data.todos\n            })\n\n          })\n          .catch( error => {\n            this.setState({\n              message: error.message,\n              user: null\n            })\n          }) \n\n        })\n\n      })\n      .catch( error => {\n        return;\n      })\n  \n  }\n\n  handleSubmit = (value) => {\n  \n\n    handleSubmitNewTask(value, this.state.list)\n      .then( newTodoList => {\n        console.log(newTodoList)\n        this.setState({\n          list: newTodoList\n        })\n\n      })\n      .catch( error => {\n        console.log(error);\n      })\n  }\n\n  handleDelete = (taskID) => {\n\n    handleDeleteApi(taskID)\n      .then( newArray => {\n\n        console.log(newArray)\n\n        this.setState({\n          list: newArray\n        })\n      })\n      .catch( error => {\n        console.log(error);\n      })\n  }\n\n  handleEditInputUpdate = (id, newTodo) => {\n    console.log('TRIGGERD', id, newTodo)\n\n    handleEditApi(id, newTodo)\n      .then( result => {\n          \n              let updated = [...this.state.list];\n     \n              updated.map(task => (task._id === id ? result.todo = newTodo.data.todo : task))\n  \n            this.setState({\n              list: updated\n            })\n      })\n      .catch( error => {\n        console.log(error)\n      })\n\n    // axios.put('http://localhost:3001/todo/updatetodobyid',  {\n    //     id: id,\n    //     newTodo: newTodo\n    // })\n    // .then(newTodo => {\n     \n    //   let updated = [...this.state.list];\n     \n    //   updated.map(task => (task._id === id ? task.todo = newTodo.data.todo : task))\n  \n    //   this.setState({\n    //     list: updated\n    //   })\n\n    // })\n    // .catch(error => {\n    //   console.log(error);\n    // })\n  }\n\n  handleAuth = (userInfo) => {\n  \n    handleSignUpAndLogInApi(userInfo)\n      .then(decoded => {\n\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n\n          handleGetAllTodoApi()\n            .then( result => {\n\n              this.setState({\n                list: result.data.todos\n              })\n\n            })\n            .catch( error => {\n              this.setState({\n                message: error.message\n              })\n            }) \n\n        });\n\n      })\n      .catch( error => {\n        this.setState({\n          message: error.message\n        })\n      })\n\n\n\n  }\n\n  logout = () => {\n    //console.log('85 logout');\n    this.setState({\n      user: null,\n      message: 'Please login to use the app',\n      isAuth: false\n    })\n  }\n\n  render() {\n\n    \n    return (\n      <div className=\"App\">\n        <Nav \n          appAuthFunc={this.handleAuth}\n          user={this.state.user}\n          appLogout={this.logout}\n        />\n        {\n          this.state.isAuth ? (\n            <Task \n              {...this.state}\n              appHandleSubmit={this.handleSubmit}\n              appHandleDeleteByID={this.handleDelete}\n              appHandleEditInputUpdate={this.handleEditInputUpdate}\n            />\n          ) : this.state.message\n        }\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}