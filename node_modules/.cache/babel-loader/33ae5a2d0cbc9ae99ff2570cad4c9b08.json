{"ast":null,"code":"var _jsxFileName = \"/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport Nav from './Components/Nav';\nimport './App.css';\nimport { handleSignUpAndLogInApi, handleGetAllTodoApi } from './utils/api';\nimport Task from './Components/Task';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      isAuth: false,\n      password: '1',\n      message: 'Please sign up to use the best Todo Manager System!',\n      user: null\n    };\n\n    this.handleSubmit = value => {\n      let newTask = {\n        todo: value\n      };\n      axios.post('http://localhost:3001/todo/createtodo', newTask).then(todo => {\n        let currentTaskObj = Object.assign([], this.state.list);\n        currentTaskObj.push(todo.data);\n        this.setState({\n          list: currentTaskObj\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleDelete = taskID => {\n      axios.delete(\"http://localhost:3001/todo/deletetodobyid?id=\".concat(taskID), {\n        data: {\n          id: taskID\n        }\n      }).then(result => {\n        let updated = [...this.state.list];\n        let updatedTask = updated.filter(task => task._id !== taskID);\n        this.setState({\n          list: updatedTask\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleEditInputUpdate = (id, newTodo) => {\n      console.log('TRIGGERD', id, newTodo);\n      axios.put('http://localhost:3001/todo/updatetodobyid', {\n        id: id,\n        newTodo: newTodo\n      }).then(newTodo => {\n        let updated = [...this.state.list];\n        updated.map(task => task._id === id ? task.todo = newTodo.data.todo : task);\n        this.setState({\n          list: updated\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleAuth = userInfo => {\n      handleSignUpAndLogInApi(userInfo).then(decoded => {\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n          handleGetAllTodoApi().then(result => {\n            this.setState({\n              list: result.data.todos\n            });\n          }).catch(error => {\n            this.setState({\n              message: error.message\n            });\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          message: error.message\n        });\n      });\n    };\n\n    this.logout = () => {\n      //console.log('85 logout');\n      this.setState({\n        user: null,\n        message: 'Please login to use the app',\n        isAuth: false\n      });\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      appAuthFunc: this.handleAuth,\n      user: this.state.user,\n      appLogout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }), this.state.isAuth ? React.createElement(Task, Object.assign({}, this.state, {\n      appHandleSubmit: this.handleSubmit,\n      appHandleDeleteByID: this.handleDelete,\n      appHandleEditInputUpdate: this.handleEditInputUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })) : this.state.message);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js"],"names":["React","Component","axios","jwt_decode","Nav","handleSignUpAndLogInApi","handleGetAllTodoApi","Task","App","state","list","isAuth","password","message","user","handleSubmit","value","newTask","todo","post","then","currentTaskObj","Object","assign","push","data","setState","catch","error","console","log","handleDelete","taskID","delete","id","result","updated","updatedTask","filter","task","_id","handleEditInputUpdate","newTodo","put","map","handleAuth","userInfo","decoded","email","todos","logout","componentDidMount","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Nav from './Components/Nav';\nimport './App.css';\n\nimport {\n  handleSignUpAndLogInApi,\n  handleGetAllTodoApi\n} from './utils/api';\n\nimport Task from './Components/Task';\n\nclass App extends Component {\n\n  state = {\n    list : [],\n    isAuth: false,\n    password: '1',\n    message: 'Please sign up to use the best Todo Manager System!',\n    user: null\n  }\n\n  componentDidMount() {\n\n    \n  \n  }\n\n  handleSubmit = (value) => {\n    let newTask = {\n      todo: value\n    }\n\n    axios.post('http://localhost:3001/todo/createtodo', newTask)\n         .then( todo => {\n\n\n            let currentTaskObj = Object.assign([], this.state.list);\n            currentTaskObj.push(todo.data);\n\n            this.setState({\n              list: currentTaskObj\n            })\n\n         })\n         .catch(error => {\n           console.log(error);\n         })\n\n\n  }\n\n  handleDelete = (taskID) => {\n\n  \n    axios.delete(`http://localhost:3001/todo/deletetodobyid?id=${taskID}`, { data: {\n      id: taskID\n    }})\n      .then( result => {\n        let updated = [...this.state.list];\n        let updatedTask = updated.filter(task => task._id !== taskID);\n        this.setState({\n          list: updatedTask\n        });\n      })\n      .catch( error => {\n        console.log(error)\n      })\n  }\n\n  handleEditInputUpdate = (id, newTodo) => {\n    console.log('TRIGGERD', id, newTodo)\n\n    axios.put('http://localhost:3001/todo/updatetodobyid',  {\n        id: id,\n        newTodo: newTodo\n    })\n    .then(newTodo => {\n     \n      let updated = [...this.state.list];\n     \n      updated.map(task => (task._id === id ? task.todo = newTodo.data.todo : task))\n  \n      this.setState({\n        list: updated\n      })\n\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  handleAuth = (userInfo) => {\n  \n    handleSignUpAndLogInApi(userInfo)\n      .then(decoded => {\n\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n\n          handleGetAllTodoApi()\n            .then( result => {\n\n              this.setState({\n                list: result.data.todos\n              })\n\n            })\n            .catch( error => {\n              this.setState({\n                message: error.message\n              })\n            }) \n\n        });\n\n      })\n      .catch( error => {\n        this.setState({\n          message: error.message\n        })\n      })\n\n\n\n  }\n\n  logout = () => {\n    //console.log('85 logout');\n    this.setState({\n      user: null,\n      message: 'Please login to use the app',\n      isAuth: false\n    })\n  }\n\n  render() {\n\n    \n    return (\n      <div className=\"App\">\n        <Nav \n          appAuthFunc={this.handleAuth}\n          user={this.state.user}\n          appLogout={this.logout}\n        />\n        {\n          this.state.isAuth ? (\n            <Task \n              {...this.state}\n              appHandleSubmit={this.handleSubmit}\n              appHandleDeleteByID={this.handleDelete}\n              appHandleEditInputUpdate={this.handleEditInputUpdate}\n            />\n          ) : this.state.message\n        }\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}