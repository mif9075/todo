{"ast":null,"code":"import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthJWT from './setAuthJWT';\nexport const handleGetAllTodoApi = () => {\n  return new Promise((resolve, reject) => {\n    let token = localStorage.getItem('jwtToken');\n    let decoded = jwt_decode(token);\n    axios.get(\"http://localhost:3001/todo?id=\".concat(decoded.id)).then(result => {\n      resolve(result);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};\nexport const handleSignUpAndLogInApi = userInfo => {\n  return new Promise((resolve, reject) => {\n    let axiosConfig = {\n      headers: {\n        'Content-Type': 'application/json;charset=UTF-8',\n        'Access-Control-Allow-Origin': \"*\"\n      }\n    };\n    axios.post('http://localhost:3001/users/signupandlogin', userInfo, axiosConfig).then(result => {\n      const token = result.data.token;\n      localStorage.setItem('jwtToken', token);\n      const decoded = jwt_decode(token);\n      setAuthJWT(token);\n      resolve(decoded);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/utils/api.js"],"names":["axios","jwt_decode","setAuthJWT","handleGetAllTodoApi","Promise","resolve","reject","token","localStorage","getItem","decoded","get","id","then","result","catch","error","handleSignUpAndLogInApi","userInfo","axiosConfig","headers","post","data","setItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,MAAMC,mBAAmB,GAAG,MAAM;AAErC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpC,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAZ;AACA,QAAIC,OAAO,GAAGT,UAAU,CAACM,KAAD,CAAxB;AAEAP,IAAAA,KAAK,CAACW,GAAN,yCAA2CD,OAAO,CAACE,EAAnD,GACMC,IADN,CACYC,MAAM,IAAI;AACdT,MAAAA,OAAO,CAACS,MAAD,CAAP;AACF,KAHN,EAIMC,KAJN,CAIaC,KAAK,IAAI;AACdV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACF,KANN;AAOH,GAZM,CAAP;AAaH,CAfM;AAiBP,OAAO,MAAMC,uBAAuB,GAAIC,QAAD,IAAc;AAEjD,SAAO,IAAId,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAEpC,QAAIa,WAAW,GAAG;AACdC,MAAAA,OAAO,EAAE;AACL,wBAAgB,gCADX;AAEL,uCAA+B;AAF1B;AADK,KAAlB;AAOApB,IAAAA,KAAK,CAACqB,IAAN,CAAW,4CAAX,EAAyDH,QAAzD,EAAmEC,WAAnE,EACMN,IADN,CACYC,MAAM,IAAI;AAAA,YAENP,KAFM,GAEIO,MAAM,CAACQ,IAFX,CAENf,KAFM;AAIdC,MAAAA,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiChB,KAAjC;AAEA,YAAMG,OAAO,GAAGT,UAAU,CAACM,KAAD,CAA1B;AAEAL,MAAAA,UAAU,CAACK,KAAD,CAAV;AAEAF,MAAAA,OAAO,CAACK,OAAD,CAAP;AAEF,KAbN,EAcMK,KAdN,CAcaC,KAAK,IAAI;AACbV,MAAAA,MAAM,CAACU,KAAD,CAAN;AACH,KAhBN;AAmBH,GA5BM,CAAP;AA6BH,CA/BM","sourcesContent":["import axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport setAuthJWT from './setAuthJWT';\n\nexport const handleGetAllTodoApi = () => {\n\n    return new Promise((resolve, reject) => {\n\n        let token = localStorage.getItem('jwtToken');\n        let decoded = jwt_decode(token);\n\n        axios.get(`http://localhost:3001/todo?id=${decoded.id}`)\n             .then( result => {\n                resolve(result);\n             })\n             .catch( error => {\n                reject(error);\n             });\n    });\n}\n\nexport const handleSignUpAndLogInApi = (userInfo) => {\n\n    return new Promise((resolve, reject) => {\n\n        let axiosConfig = {\n            headers: {\n                'Content-Type': 'application/json;charset=UTF-8',\n                'Access-Control-Allow-Origin': \"*\"\n            }\n        };\n\n        axios.post('http://localhost:3001/users/signupandlogin', userInfo, axiosConfig)\n             .then( result => {\n\n                const { token } = result.data;\n\n                localStorage.setItem('jwtToken', token);\n\n                const decoded = jwt_decode(token);\n\n                setAuthJWT(token);\n\n                resolve(decoded);\n\n             })\n             .catch( error => {\n                 reject(error);\n             })\n    \n\n    });\n}"]},"metadata":{},"sourceType":"module"}