{"ast":null,"code":"var _jsxFileName = \"/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport Nav from './Components/Nav';\nimport './App.css';\nimport { handleSignUpAndLogInApi, handleGetAllTodoApi, handleJWTExpirationApi, handleSubmitNewTask, handleDeleteApi } from './utils/api';\nimport Task from './Components/Task';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [],\n      isAuth: false,\n      password: '1',\n      message: 'Please sign up to use the best Todo Manager System!',\n      user: null\n    };\n\n    this.handleSubmit = value => {\n      handleSubmitNewTask(value, this.state.list).then(newTodoList => {\n        console.log(newTodoList);\n        this.setState({\n          list: newTodoList\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleDelete = taskID => {\n      handleDeleteApi(taskID).then(newArray => {\n        console.log(newArray);\n        this.setState({\n          list: newArray\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleEditInputUpdate = (id, newTodo) => {\n      console.log('TRIGGERD', id, newTodo);\n      axios.put('http://localhost:3001/todo/updatetodobyid', {\n        id: id,\n        newTodo: newTodo\n      }).then(newTodo => {\n        let updated = [...this.state.list];\n        updated.map(task => task._id === id ? task.todo = newTodo.data.todo : task);\n        this.setState({\n          list: updated\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n\n    this.handleAuth = userInfo => {\n      handleSignUpAndLogInApi(userInfo).then(decoded => {\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n          handleGetAllTodoApi().then(result => {\n            this.setState({\n              list: result.data.todos\n            });\n          }).catch(error => {\n            this.setState({\n              message: error.message\n            });\n          });\n        });\n      }).catch(error => {\n        this.setState({\n          message: error.message\n        });\n      });\n    };\n\n    this.logout = () => {\n      //console.log('85 logout');\n      this.setState({\n        user: null,\n        message: 'Please login to use the app',\n        isAuth: false\n      });\n    };\n  }\n\n  componentDidMount() {\n    handleJWTExpirationApi().then(token => {\n      let decoded = jwt_decode(token);\n      this.setState({\n        user: decoded.email,\n        isAuth: true\n      }, () => {\n        handleGetAllTodoApi().then(result => {\n          this.setState({\n            list: result.data.todos\n          });\n        }).catch(error => {\n          this.setState({\n            message: error.message,\n            user: null\n          });\n        });\n      });\n    }).catch(error => {\n      return;\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      appAuthFunc: this.handleAuth,\n      user: this.state.user,\n      appLogout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), this.state.isAuth ? React.createElement(Task, Object.assign({}, this.state, {\n      appHandleSubmit: this.handleSubmit,\n      appHandleDeleteByID: this.handleDelete,\n      appHandleEditInputUpdate: this.handleEditInputUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })) : this.state.message);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js"],"names":["React","Component","axios","jwt_decode","Nav","handleSignUpAndLogInApi","handleGetAllTodoApi","handleJWTExpirationApi","handleSubmitNewTask","handleDeleteApi","Task","App","state","list","isAuth","password","message","user","handleSubmit","value","then","newTodoList","console","log","setState","catch","error","handleDelete","taskID","newArray","handleEditInputUpdate","id","newTodo","put","updated","map","task","_id","todo","data","handleAuth","userInfo","decoded","email","result","todos","logout","componentDidMount","token","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nimport Nav from './Components/Nav';\nimport './App.css';\n\nimport {\n  handleSignUpAndLogInApi,\n  handleGetAllTodoApi,\n  handleJWTExpirationApi,\n  handleSubmitNewTask,\n  handleDeleteApi\n} from './utils/api';\n\nimport Task from './Components/Task';\n\nclass App extends Component {\n\n  state = {\n    list : [],\n    isAuth: false,\n    password: '1',\n    message: 'Please sign up to use the best Todo Manager System!',\n    user: null\n  }\n\n  componentDidMount() {\n\n    handleJWTExpirationApi()\n      .then( token => {\n\n        let decoded = jwt_decode(token);\n\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n\n          handleGetAllTodoApi()\n          .then( result => {\n\n            this.setState({\n              list: result.data.todos\n            })\n\n          })\n          .catch( error => {\n            this.setState({\n              message: error.message,\n              user: null\n            })\n          }) \n\n        })\n\n      })\n      .catch( error => {\n        return;\n      })\n  \n  }\n\n  handleSubmit = (value) => {\n  \n\n    handleSubmitNewTask(value, this.state.list)\n      .then( newTodoList => {\n        console.log(newTodoList)\n        this.setState({\n          list: newTodoList\n        })\n\n      })\n      .catch( error => {\n        console.log(error);\n      })\n  }\n\n  handleDelete = (taskID) => {\n\n    handleDeleteApi(taskID)\n      .then( newArray => {\n\n        console.log(newArray)\n\n        this.setState({\n          list: newArray\n        })\n      })\n      .catch( error => {\n        console.log(error);\n      })\n  }\n\n  handleEditInputUpdate = (id, newTodo) => {\n    console.log('TRIGGERD', id, newTodo)\n\n    axios.put('http://localhost:3001/todo/updatetodobyid',  {\n        id: id,\n        newTodo: newTodo\n    })\n    .then(newTodo => {\n     \n      let updated = [...this.state.list];\n     \n      updated.map(task => (task._id === id ? task.todo = newTodo.data.todo : task))\n  \n      this.setState({\n        list: updated\n      })\n\n    })\n    .catch(error => {\n      console.log(error);\n    })\n  }\n\n  handleAuth = (userInfo) => {\n  \n    handleSignUpAndLogInApi(userInfo)\n      .then(decoded => {\n\n        this.setState({\n          user: decoded.email,\n          isAuth: true\n        }, () => {\n\n          handleGetAllTodoApi()\n            .then( result => {\n\n              this.setState({\n                list: result.data.todos\n              })\n\n            })\n            .catch( error => {\n              this.setState({\n                message: error.message\n              })\n            }) \n\n        });\n\n      })\n      .catch( error => {\n        this.setState({\n          message: error.message\n        })\n      })\n\n\n\n  }\n\n  logout = () => {\n    //console.log('85 logout');\n    this.setState({\n      user: null,\n      message: 'Please login to use the app',\n      isAuth: false\n    })\n  }\n\n  render() {\n\n    \n    return (\n      <div className=\"App\">\n        <Nav \n          appAuthFunc={this.handleAuth}\n          user={this.state.user}\n          appLogout={this.logout}\n        />\n        {\n          this.state.isAuth ? (\n            <Task \n              {...this.state}\n              appHandleSubmit={this.handleSubmit}\n              appHandleDeleteByID={this.handleDelete}\n              appHandleEditInputUpdate={this.handleEditInputUpdate}\n            />\n          ) : this.state.message\n        }\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}