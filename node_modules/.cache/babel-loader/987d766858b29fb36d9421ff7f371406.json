{"ast":null,"code":"var _jsxFileName = \"/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js\";\nimport React, { Component } from 'react';\nimport uuidV4 from 'uuid/v4';\nimport Nav from './Components/Nav';\nimport './App.css';\nimport Task from './Components/Task';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      list: [{\n        id: uuidV4(),\n        todo: 'Buy Milk'\n      }, {\n        id: uuidV4(),\n        todo: 'Pick up mail'\n      }, {\n        id: uuidV4(),\n        todo: 'Walk the dog'\n      }],\n      isAuth: false,\n      password: '123',\n      message: 'Please sign up to use the best Todo Manager System!',\n      user: null\n    };\n\n    this.handleSubmit = value => {\n      let newTask = {\n        todo: value,\n        id: uuidV4()\n      };\n      let currentTaskObj = Object.assign([], this.state.list);\n      currentTaskObj.push(newTask);\n      this.setState({\n        list: currentTaskObj\n      });\n    };\n\n    this.handleDelete = taskID => {\n      let updated = [...this.state.list];\n      let updatedTask = updated.filter(task => task.id !== taskID);\n      this.setState({\n        list: updatedTask\n      });\n    };\n\n    this.handleEditInputUpdate = (id, newInput) => {\n      console.log('TRIGGERD');\n      let updated = [...this.state.list];\n      updated.map(task => task.id === id ? task.todo = newInput : task);\n      this.setState({\n        list: updated\n      });\n    };\n\n    this.handleAuth = userInfo => {\n      //console.log('APP 65', userInfo);\n      const name = userInfo.name,\n            password = userInfo.password;\n\n      if (password === this.state.password) {\n        this.setState({\n          isAuth: !this.state.isAuth,\n          user: name\n        });\n      } else {\n        this.setState({\n          message: 'Password does not match! Please check your password'\n        });\n      }\n    };\n\n    this.logout = () => {\n      //console.log('85 logout');\n      this.setState({\n        user: null,\n        message: 'Please login to use the app',\n        isAuth: false\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      appAuthFunc: this.handleAuth,\n      user: this.state.user,\n      appLogout: this.logout,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), this.state.isAuth ? React.createElement(Task, Object.assign({}, this.state, {\n      appHandleSubmit: this.handleSubmit,\n      appHandleDeleteByID: this.handleDelete,\n      appHandleEditInputUpdate: this.handleEditInputUpdate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })) : this.state.message);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/pak/Desktop/react-term-3/react-day-2/todo/src/App.js"],"names":["React","Component","uuidV4","Nav","Task","App","state","list","id","todo","isAuth","password","message","user","handleSubmit","value","newTask","currentTaskObj","Object","assign","push","setState","handleDelete","taskID","updated","updatedTask","filter","task","handleEditInputUpdate","newInput","console","log","map","handleAuth","userInfo","name","logout","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport uuidV4 from 'uuid/v4';\n\nimport Nav from './Components/Nav';\nimport './App.css';\n\n\nimport Task from './Components/Task';\n\nclass App extends Component {\n\n  state = {\n    list : [\n      {\n        id: uuidV4(),\n        todo: 'Buy Milk'\n      }, \n      {\n        id: uuidV4(),\n        todo: 'Pick up mail'\n      },\n      {\n        id: uuidV4(),\n        todo: 'Walk the dog'\n      }\n    ],\n    isAuth: false,\n    password: '123',\n    message: 'Please sign up to use the best Todo Manager System!',\n    user: null\n  }\n\n  handleSubmit = (value) => {\n    let newTask = {\n      todo: value,\n      id: uuidV4()\n    }\n    let currentTaskObj = Object.assign([], this.state.list);\n    currentTaskObj.push(newTask);\n\n    this.setState({\n      list: currentTaskObj\n    })\n  }\n\n  handleDelete = (taskID) => {\n    let updated = [...this.state.list];\n    let updatedTask = updated.filter(task => task.id !== taskID);\n    this.setState({\n      list: updatedTask\n    });\n  }\n\n  handleEditInputUpdate = (id, newInput) => {\n    console.log('TRIGGERD')\n    let updated = [...this.state.list];\n\n    updated.map(task => (task.id === id ? task.todo = newInput : task))\n\n    this.setState({\n      list: updated\n    })\n\n  }\n\n  handleAuth = (userInfo) => {\n    //console.log('APP 65', userInfo);\n\n    const { name, password } = userInfo;\n\n    if(password === this.state.password) {\n      this.setState({\n        isAuth: !this.state.isAuth,\n        user: name\n      })\n    } else {\n      this.setState({\n        message: 'Password does not match! Please check your password'\n      })\n    }\n\n  }\n\n  logout = () => {\n    //console.log('85 logout');\n    this.setState({\n      user: null,\n      message: 'Please login to use the app',\n      isAuth: false\n    })\n  }\n\n  render() {\n\n    return (\n      <div className=\"App\">\n        <Nav \n          appAuthFunc={this.handleAuth}\n          user={this.state.user}\n          appLogout={this.logout}\n        />\n        {\n          this.state.isAuth ? (\n            <Task \n              {...this.state}\n              appHandleSubmit={this.handleSubmit}\n              appHandleDeleteByID={this.handleDelete}\n              appHandleEditInputUpdate={this.handleEditInputUpdate}\n            />\n          ) : this.state.message\n        }\n      </div>\n    )\n  }\n\n\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}